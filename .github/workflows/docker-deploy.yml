# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run : chmod +x gradlew
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean build -x test
        
   # Docker
    - name: Docker - Setup Docker
      uses: docker/setup-buildx-action@v2

    - name: Docker - Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Docker - Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: parksewoong/test:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Depoly in AWS ec2 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: | 
            sudo docker system prune -f
            sudo docker pull parksewoong/test:latest
            sudo docker stop test-server && sudo docker rm test-server
            sudo docker run -d --name test-server -p 8080:8080 parksewoong/test:latest
            sleep 60
            sudo docker inspect -f {{.State.Pid}} test-server | grep -v '^0'
